{"ast":null,"code":"import _objectSpread from \"/Users/Jwill/Desktop/UCF-Assignments/Clicky-Game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/Jwill/Desktop/UCF-Assignments/Clicky-Game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Jwill/Desktop/UCF-Assignments/Clicky-Game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Jwill/Desktop/UCF-Assignments/Clicky-Game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Jwill/Desktop/UCF-Assignments/Clicky-Game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Jwill/Desktop/UCF-Assignments/Clicky-Game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Jwill/Desktop/UCF-Assignments/Clicky-Game/src/components/Game/index.js\";\nimport React, { Component } from \"react\";\nimport Nav from \"../Nav\";\nimport Header from \"../Header\";\nimport Container from \"../Container\";\nimport ClickItem from \"../ClickItem\";\nimport Footer from \"../Footer\";\nimport data from \"../../data.json\";\n\nvar Game = /*#__PURE__*/function (_Component) {\n  _inherits(Game, _Component);\n\n  function Game() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Game);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Game)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      data: data,\n      score: 0,\n      topScore: 0\n    };\n\n    _this.handleCorrectGuess = function (newData) {\n      var _this$state = _this.state,\n          topScore = _this$state.topScore,\n          score = _this$state.score;\n      var newScore = score + 1;\n      var newTopScore = Math.max(newScore, topScore);\n\n      _this.setState({\n        data: _this.shuffleData(newData),\n        score: newScore,\n        topScore: newTopScore\n      });\n    };\n\n    _this.handleIncorrectGuess = function (data) {\n      _this.setState({\n        data: _this.resetData(data),\n        score: 0\n      });\n    };\n\n    _this.resetData = function (data) {\n      var resetData = data.map(function (item) {\n        return _objectSpread({}, item, {\n          clicked: false\n        });\n      });\n      return _this.shuffleData(resetData);\n    };\n\n    _this.shuffleData = function (data) {\n      var i = data.length - 1;\n\n      while (i > 0) {\n        var j = Math.floor(Math.random() * (i + 1));\n        var temp = data[i];\n        data[i] = data[j];\n        data[j] = temp;\n        i--;\n      }\n\n      return data;\n    };\n\n    _this.handleItemClick = function (id) {\n      var guessedCorrectly = false;\n\n      var newData = _this.state.data.map(function (item) {\n        var newItem = _objectSpread({}, item);\n\n        if (newItem.id === id) {\n          if (!newItem.clicked) {\n            newItem.clicked = true;\n            guessedCorrectly = true;\n          }\n        }\n\n        return newItem;\n      });\n\n      guessedCorrectly ? _this.handleCorrectGuess(newData) : _this.handleIncorrectGuess(newData);\n    };\n\n    return _this;\n  }\n\n  _createClass(Game, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        data: this.shuffleData(this.state.data)\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Nav, {\n        score: this.state.score,\n        topScore: this.state.topScore,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 9\n        }\n      }, this.state.data.map(function (item) {\n        return /*#__PURE__*/React.createElement(ClickItem, {\n          key: item.id,\n          id: item.id,\n          shake: !_this2.state.score && _this2.state.topScore,\n          handleClick: _this2.handleItemClick,\n          image: item.image,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }\n        });\n      })), /*#__PURE__*/React.createElement(Footer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return Game;\n}(Component);\n\nexport default Game;","map":{"version":3,"sources":["/Users/Jwill/Desktop/UCF-Assignments/Clicky-Game/src/components/Game/index.js"],"names":["React","Component","Nav","Header","Container","ClickItem","Footer","data","Game","state","score","topScore","handleCorrectGuess","newData","newScore","newTopScore","Math","max","setState","shuffleData","handleIncorrectGuess","resetData","map","item","clicked","i","length","j","floor","random","temp","handleItemClick","id","guessedCorrectly","newItem","image"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Nav from \"../Nav\";\nimport Header from \"../Header\";\nimport Container from \"../Container\";\nimport ClickItem from \"../ClickItem\";\nimport Footer from \"../Footer\";\nimport data from \"../../data.json\";\n\nclass Game extends Component {\n\n  state = {\n    data,\n    score: 0,\n    topScore: 0\n\n  };\n\n  componentDidMount() {\n\n    this.setState({ data: this.shuffleData(this.state.data) });\n\n  }\n\n  handleCorrectGuess = newData => {\n\n    const { topScore, score } = this.state;\n    const newScore = score + 1;\n    const newTopScore = Math.max(newScore, topScore);\n\n    this.setState({\n\n      data: this.shuffleData(newData),\n      score: newScore,\n      topScore: newTopScore\n\n    });\n\n\n  };\n\n  handleIncorrectGuess = data => {\n\n    this.setState({\n      data: this.resetData(data),\n      score: 0\n\n    });\n\n\n  };\n\n  resetData = data => {\n\n    const resetData = data.map(item => ({ ...item, clicked: false }));\n    return this.shuffleData(resetData);\n\n  };\n\n  shuffleData = data => {\n\n    let i = data.length - 1;\n\n    while (i > 0) {\n      const j = Math.floor(Math.random() * (i + 1));\n      const temp = data[i];\n      data[i] = data[j];\n      data[j] = temp;\n      i--;\n    }\n\n    return data;\n\n  };\n\n  handleItemClick = id => {\n\n    let guessedCorrectly = false;\n    const newData = this.state.data.map(item => {\n      const newItem = { ...item };\n      if (newItem.id === id) {\n\n        if (!newItem.clicked) {\n\n          newItem.clicked = true;\n          guessedCorrectly = true;\n          \n        }\n\n      }\n\n      return newItem;\n\n\n    });\n    \n    guessedCorrectly\n      ? this.handleCorrectGuess(newData)\n      : this.handleIncorrectGuess(newData);\n  };\n\n\n\n\n  render() {\n    return (\n      <div>\n        <Nav score={this.state.score} topScore={this.state.topScore} />\n        <Header />\n        <Container>\n          {this.state.data.map(item => (\n            <ClickItem\n              key={item.id}\n              id={item.id}\n              shake={!this.state.score && this.state.topScore}\n              handleClick={this.handleItemClick}\n              image={item.image}\n            />\n          ))}\n        </Container>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}